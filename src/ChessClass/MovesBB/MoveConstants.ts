import { Bitboard } from "../BoardBB/BitboardTypes";

const MINIMAL_RANK: Bitboard = 0x00000000000000ffn;
const MAXIMAL_RANK: Bitboard = 0xff00000000000000n;
const LEFTMOST_FILE: Bitboard =  0b1000000010000000100000001000000010000000100000001000000010000000n;
const RIGHTMOST_FILE: Bitboard = 0b0000000100000001000000010000000100000001000000010000000100000001n;

const RIGHT_DIAGONALS: Bitboard[] = [
  0b1000000000000000000000000000000000000000000000000000000000000000n,
  0b0100000010000000000000000000000000000000000000000000000000000000n,
  0b0010000001000000100000000000000000000000000000000000000000000000n,
  0b0001000000100000010000001000000000000000000000000000000000000000n,
  0b0000100000010000001000000100000010000000000000000000000000000000n,
  0b0000010000001000000100000010000001000000100000000000000000000000n,
  0b0000001000000100000010000001000000100000010000001000000000000000n,
  0b0000000100000010000001000000100000010000001000000100000010000000n,
  0b0000000000000001000000100000010000001000000100000010000001000000n,
  0b0000000000000000000000010000001000000100000010000001000000100000n,
  0b0000000000000000000000000000000100000010000001000000100000010000n,
  0b0000000000000000000000000000000000000001000000100000010000001000n,
  0b0000000000000000000000000000000000000000000000010000001000000100n,
  0b0000000000000000000000000000000000000000000000000000000100000010n,
  0b0000000000000000000000000000000000000000000000000000000000000001n
]

const LEFT_DIAGONALS: Bitboard[] = [
  0b0000000000000000000000000000000000000000000000000000000010000000n,
  0b0000000000000000000000000000000000000000000000001000000001000000n,
  0b0000000000000000000000000000000000000000100000000100000000100000n,
  0b0000000000000000000000000000000010000000010000000010000000010000n,
  0b0000000000000000000000001000000001000000001000000001000000001000n,
  0b0000000000000000100000000100000000100000000100000000100000000100n,
  0b0000000010000000010000000010000000010000000010000000010000000010n,
  0b1000000001000000001000000001000000001000000001000000001000000001n,
  0b0100000000100000000100000000100000000100000000100000000100000000n,
  0b0010000000010000000010000000010000000010000000010000000000000000n,
  0b0001000000001000000001000000001000000001000000000000000000000000n,
  0b0000100000000100000000100000000100000000000000000000000000000000n,
  0b0000010000000010000000010000000000000000000000000000000000000000n,
  0b0000001000000001000000000000000000000000000000000000000000000000n,
  0b0000000100000000000000000000000000000000000000000000000000000000n
]

const RIGHT_DIAGONAL_BIT_MAP: Bitboard[] = [];

for (let i = 0; i < 64; i++) {
  const x: number = 7 - Math.floor(i / 8) + i % 8;
  RIGHT_DIAGONAL_BIT_MAP.push(RIGHT_DIAGONALS[x]);
}

const LEFT_DIAGONAL_BIT_MAP: Bitboard[] = [];

for (let i = 0; i < 64; i++) {
  const x: number = Math.floor(i / 8) + i % 8;
  LEFT_DIAGONAL_BIT_MAP.push(LEFT_DIAGONALS[x]);
}
console.log(LEFT_DIAGONAL_BIT_MAP.length);


export { MINIMAL_RANK, MAXIMAL_RANK, LEFTMOST_FILE, RIGHTMOST_FILE, RIGHT_DIAGONALS, LEFT_DIAGONALS, RIGHT_DIAGONAL_BIT_MAP, LEFT_DIAGONAL_BIT_MAP };